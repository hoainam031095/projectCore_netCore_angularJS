@using CongThongTin.Models;
@using CongThongTin.App_Data;
@using Microsoft.AspNetCore.Http.Extensions;
@using Microsoft.AspNetCore.Http;
@using Newtonsoft.Json;
<ul class="sidebar-nav">
    <li>
        <a href="/admin"><i class="fa fa-home"></i><span class="sidebar-nav-mini-hide"> Trang chủ</span></a>
    </li>
    @{
        var acSession = Context.Session.GetString("AccountSession");
        AccountSession sessionAccount = acSession == null ? default(AccountSession) : JsonConvert.DeserializeObject<AccountSession>(acSession);

        congthongtinContext db = new congthongtinContext();
        var menuTop = db.TbController.Where(a => a.IsActive == true && a.ParentId == null && a.Level != 0 && a.IsDelete == false).ToList().OrderBy(a => a.SortValue);
        foreach (var menu in menuTop)
        {
            if (checkIsPermissionMenu(menu))
            {
                string itemtext = "";
                if (Context.Request.GetEncodedUrl().Contains(menu.Controller))
                {
                    itemtext = (string.Format("<li class='active'><a href='#' class='sidebar-nav-menu'><i class='fa fa-angle-left sidebar-nav-indicator sidebar-nav-mini-hide'></i><span class='sidebar-nav-mini-hide'>{0}</span></a>", menu.Display == null ? menu.Controller : menu.Display));
                }
                else
                {
                    itemtext = (string.Format("<li><a href='#' class='sidebar-nav-menu'><i class='fa fa-angle-left sidebar-nav-indicator sidebar-nav-mini-hide'></i><i class='fa fa-star-o'></i><span class='sidebar-nav-mini-hide'> {0}</span></a>", menu.Display == null ? menu.Controller : menu.Display));
                }
                itemtext += GetMenuItem(menu);
                itemtext += "</li>";
                @Html.Raw(itemtext);
            }

        }
        bool checkIsPermissionMenu(TbController menu)
        {
            bool isPermission = false;
            using (congthongtinContext db = new congthongtinContext())
            {
                if (db.TbAction.Any(a => a.ControllerId == menu.Id && a.IsActive == true && a.IsDelete == false
                && (a.TbRoleGroupAction.Any(b => b.IsActive == true && (b.Id == sessionAccount.RoleGroupId) && b.RoleGroup.IsActive == true) 
                || sessionAccount.UserName == "admin1234$#@!")) || (menu.ParentId == null && menu.Level == 1))
                {
                    isPermission = true;
                }

                if (isPermission == false)
                {
                    var menus = db.TbController.Where(a => a.IsActive == true && a.ParentId == menu.Id);
                    if (menus.Any())
                    {
                        foreach (var mn in menus)
                        {
                            if (checkIsPermissionMenu(mn))
                            {
                                isPermission = true;
                                break;
                            }
                        }
                    }
                }
                return isPermission;
            }
        }

        string GetMenuItem(TbController ParentMenu)
        {
            string menuUl = "";
            var menus = db.TbController.Where(a => a.ParentId == ParentMenu.Id && a.IsActive == true && a.IsDelete == false).ToList();
            if (menus.Count() > 0)
            {
                menuUl = "<ul>";
                foreach (var menu in menus)
                {
                    if (checkIsPermissionMenu(menu))
                    {
                        string extend = GetMenuItem(menu);
                        string url = "#";
                        string menuActive = "";
                        //if (menu.m_action.Any())
                        if (db.TbAction.Any(ac => ac.ControllerName == menu.Controller))
                        {
                            url = menu.Url;
                            if (Context.Request.GetEncodedUrl().Contains(url))
                            {
                                menuActive = "active";
                            }
                        }
                        string menuIsParent = extend.Length > 0 ? "sidebar-nav-menu" : "";
                        string menuclass = string.Format("class='{0} {1}'", menuActive, menuIsParent);
                        string menunav = extend.Length > 0 ? "<i class='fa fa-angle-left sidebar-nav-indicator sidebar-nav-mini-hide'></i>" : "";
                        menuUl += string.Format("<li><a href='{4}' {2}>{3} + <span class='sidebar-nav-mini-hide'>{0}</span></a><ul>{1}</ul></li>", menu.Display == null ? menu.Controller : menu.Display, extend, menuclass, menunav, url);
                    }
                }
                menuUl += "</ul>";
            }
            return menuUl;
        }
    }
</ul>
