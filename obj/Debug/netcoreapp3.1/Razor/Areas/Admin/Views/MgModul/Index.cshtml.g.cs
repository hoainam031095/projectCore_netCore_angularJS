#pragma checksum "D:\code\code C#\Hoainam1\netCore\CongThongTin\CongThongTin\Areas\Admin\Views\MgModul\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a5cec439c939fa9666f99ab3a59c391443b2e258"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_MgModul_Index), @"mvc.1.0.view", @"/Areas/Admin/Views/MgModul/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a5cec439c939fa9666f99ab3a59c391443b2e258", @"/Areas/Admin/Views/MgModul/Index.cshtml")]
    public class Areas_Admin_Views_MgModul_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/admin/Content/buttons.dataTables.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\code\code C#\Hoainam1\netCore\CongThongTin\CongThongTin\Areas\Admin\Views\MgModul\Index.cshtml"
  
    ViewData["Title"] = "Modul";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            DefineSection("styles", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "a5cec439c939fa9666f99ab3a59c391443b2e2583704", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    <style type=\"text/css\">\r\n        .edit .modal-dialog {\r\n            width: 40%;\r\n        }\r\n\r\n        #modal-view-action-modul .modal-dialog {\r\n            width: 60%;\r\n        }\r\n    </style>\r\n");
            }
            );
            WriteLiteral(@"<ul class=""breadcrumb breadcrumb-top"">
    Hệ thống >
    <a href=""#"">Modul</a>
</ul>
<div class=""block"" ng-controller=""ModulPage"">
    <div class=""block-title"">
        <div class=""block-options pull-right"">
            <a href=""javascript:void(0)"" class=""btn btn-alt btn-sm btn-primary hint--top"" aria-label=""Thu nhỏ"" data-toggle=""block-toggle-content""><i class=""fa fa-arrows-v""></i></a>
            <a href=""javascript:void(0)"" class=""btn btn-alt btn-sm btn-primary hint--top"" aria-label=""Toàn màn hình"" data-toggle=""block-toggle-fullscreen""><i class=""fa fa-desktop""></i></a>
        </div>
        <h2><strong>Danh sách modul</strong></h2>
    </div>
    <div class=""block-content"">

");
            WriteLiteral(@"        <table class=""dataTable table table-vcenter table-condensed table-bordered"">
            <thead>
                <tr>
                    <th class=""text-center"">STT</th>
                    <th class=""text-center"">Modul</th>
                    <th class=""text-center"">Tên định nghĩa</th>
                    <th class=""text-center"">Mô tả</th>
                    <th class=""text-center"">Trạng thái</th>
                    <th class=""text-center"">Thao tác</th>
                </tr>
            </thead>
            <tbody>
                <tr ng-repeat=""item in dataPagingRole() track by item.id"">
                    <td class=""text-center"">{{data.indexOf(item) + 1}}</td>
                    <td>{{item.controller}}</td>
                    <td>{{item.display == null ? (item.name == null ? item.controller : item.name) : item.display}}</td>
                    <td>{{item.description}}</td>
                    <td><a href=""javascript: void(0)"" class=""hint--top"" aria-label=""Click thay đổi trạ");
            WriteLiteral("ng thái\" ng-click=\"updateStatusModul(item.id)\">{{item.isActive == true ? \'Hoạt động\' : \'Không hoạt động\'}}</a></td>\r\n                    <td class=\"hander text-center\">\r\n                        <a");
            BeginWriteAttribute("href", " href=\'", 2353, "\'", 2360, 0);
            EndWriteAttribute();
            WriteLiteral(" class=\"btn btn-default hint--top\" aria-label=\"Chỉnh sửa\" ng-click=\"loadFormEditModul(item)\"> <i class=\"fa fa-pencil\"></i></a>\r\n                        <a");
            BeginWriteAttribute("href", " href=\'", 2515, "\'", 2522, 0);
            EndWriteAttribute();
            WriteLiteral(@" class=""btn btn-default hint--top"" aria-label=""Xem action"" ng-click=""loadActionOfModul(item)""><i class=""fa fa-eye""></i></a>
                    </td>
                </tr>
            </tbody>
        </table>
        <div class=""row row-paging"">
            <div class=""col-sm-4 info-paging"">
                <span> Trang {{currentPage}} / {{numPages}} ( tổng cộng có {{totalItems()}} bản ghi )</span>
            </div>
            <div class=""col-sm-8 text-right"">
                <pagination total-items=""totalItems()""
                            ng-model=""currentPage""
                            max-size=""maxSize""
                            items-per-page=""itemsOnPage""
                            num-pages=""numPages""
                            previous-text=""Trước"" next-text=""Tiếp"" first-text=""Đầu"" last-text=""Cuối""
                            class=""pagination-sm"" boundary-links=""true"">
                </pagination>
            </div>
        </div>

");
            WriteLiteral(@"        <div class=""modal fade edit"" id=""modal-edit-modul"">
            <div class=""modal-dialog"">
                <form class=""formNhap"">
                    <div class=""modal-content"">
                        <div class=""modal-header"" style=""background-color: #367fa9; color: #fff;"">
                            <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                <span aria-hidden=""true"">&times;</span>
                            </button>
                            <h3 class=""modal-title"">Chỉnh sửa modul ""{{modulEdit.name == null ? modulEdit.controller : modulEdit.name}}""</h3>
                        </div>
                        <div class=""modal-body"">
                            <div class=""form-group"">
                                <label");
            BeginWriteAttribute("for", " for=\"", 4380, "\"", 4386, 0);
            EndWriteAttribute();
            WriteLiteral(">Tên modul (*):</label>\r\n                                <input class=\"form-control\" ng-model=\"modulEdit.name\" required />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label");
            BeginWriteAttribute("for", " for=\"", 4639, "\"", 4645, 0);
            EndWriteAttribute();
            WriteLiteral(@">Tên hiển thị (*):</label>
                                <input class=""form-control"" ng-model=""modulEdit.display"" required />
                            </div>
                            <div class=""form-group"">
                                <label");
            BeginWriteAttribute("for", " for=\"", 4904, "\"", 4910, 0);
            EndWriteAttribute();
            WriteLiteral(@">Mô tả:</label>
                                <input class=""form-control"" ng-model=""modulEdit.description"" />
                            </div>
                            <div class=""form-group"" style=""width: 95%"">
                                <label for=""select_group_modul"">Nhóm modul</label>
                                <select class=""form-control"" id=""select_group_modul"" ng-options=""item.id as (item.display === null ? item.name : item.display) for item in model.jGroupModul"" ng-model=""modulEdit.parentId"">
                                    <option");
            BeginWriteAttribute("value", " value=\"", 5483, "\"", 5491, 0);
            EndWriteAttribute();
            WriteLiteral(@">--- Chọn nhóm modul ---</option>
                                </select>
                            </div>
                        </div>
                        <div class=""modal-footer"">
                            <button type=""button"" class=""btn btn-default pull-left"" data-dismiss=""modal"">Đóng</button>
                            <button type=""submit"" class=""btn btn-primary"" ng-click=""saveEditModul()"">Lưu</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
");
            WriteLiteral("\r\n");
            WriteLiteral(@"        <div class=""modal fade"" id=""modal-view-action-modul"">
            <div class=""modal-dialog"">
                <form class=""formNhap"">
                    <div class=""modal-content"">
                        <div class=""modal-header"" style=""background-color: #367fa9; color: #fff;"">
                            <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                <span aria-hidden=""true"">&times;</span>
                            </button>
                            <h3 class=""modal-title"">Danh sách action của modul ""{{modulView.name == null ? modulView.controller : modulView.name}}""</h3>
                        </div>
                        <div class=""modal-body"">
                            <table class=""table table-vcenter table-condensed table-bordered"">
                                <thead>
                                    <tr>
                                        <th class=""text-center"">STT</th>
                        ");
            WriteLiteral(@"                <th class=""text-center"">Modul</th>
                                        <th class=""text-center"">Tên định nghĩa</th>
                                        <th class=""text-center"">Mô tả</th>
                                        <th class=""text-center"">Trạng thái</th>
                                        <th class=""text-center"">Thao tác</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr ng-repeat=""item in modulView.jaction track by item.id"">
                                        <td class=""text-center"">{{modulView.jaction.indexOf(item) + 1}}</td>
                                        <td>{{item.action}}</td>
                                        <td>{{item.display == null ? (item.name == null ? item.action : item.name) : item.display}}</td>
                                        <td>{{item.description}}</td>
                                        <td");
            WriteLiteral(@"><a href=""javascript: void(0)"" class=""hint--top"" aria-label=""Click thay đổi trạng thái"" ng-click=""updateStatusAction(item.id)"">{{item.isActive == true ? 'Hoạt động' : 'Không hoạt động'}}</a></td>
                                        <td class=""hander text-center"">
                                            <a");
            BeginWriteAttribute("href", " href=\'", 8501, "\'", 8508, 0);
            EndWriteAttribute();
            WriteLiteral(@" class=""btn btn-default hint--top"" aria-label=""Chỉnh sửa"" ng-click=""loadFormEditAction(item)""> <i class=""fa fa-pencil""></i></a>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div class=""modal-footer"">
                            <button type=""button"" class=""btn btn-default pull-left"" data-dismiss=""modal"">Đóng</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
");
            WriteLiteral("\r\n");
            WriteLiteral(@"        <div class=""modal fade edit"" id=""modal-edit-action"">
            <div class=""modal-dialog"">
                <form class=""formNhap"">
                    <div class=""modal-content"">
                        <div class=""modal-header"" style=""background-color: #367fa9; color: #fff;"">
                            <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                <span aria-hidden=""true"">&times;</span>
                            </button>
                            <h3 class=""modal-title"">Chỉnh sửa action ""{{actionEdit.name == null ? actionEdit.action : modulEdit.name}}""</h3>
                        </div>
                        <div class=""modal-body"">
                            <div class=""form-group"">
                                <label");
            BeginWriteAttribute("for", " for=\"", 10045, "\"", 10051, 0);
            EndWriteAttribute();
            WriteLiteral(">Tên action (*):</label>\r\n                                <input class=\"form-control\" ng-model=\"actionEdit.name\" required />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label");
            BeginWriteAttribute("for", " for=\"", 10306, "\"", 10312, 0);
            EndWriteAttribute();
            WriteLiteral(@">Tên hiển thị (*):</label>
                                <input class=""form-control"" ng-model=""actionEdit.display"" required />
                            </div>
                            <div class=""form-group"">
                                <label");
            BeginWriteAttribute("for", " for=\"", 10572, "\"", 10578, 0);
            EndWriteAttribute();
            WriteLiteral(@">Mô tả:</label>
                                <input class=""form-control"" ng-model=""actionEdit.description"" />
                            </div>
                        </div>
                        <div class=""modal-footer"">
                            <button type=""button"" class=""btn btn-default pull-left"" data-dismiss=""modal"">Đóng</button>
                            <button type=""submit"" class=""btn btn-primary"" ng-click=""saveEditAction()"">Lưu</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
");
            WriteLiteral("\r\n    </div>\r\n</div>\r\n\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral("\r\n    <script>\r\n            //myApp = angular.module(\"myapp\", []);\r\n            myApp.controller(\'ModulPage\', [\'$scope\', \'$http\', function ($scope, $http) {\r\n                $scope.model = ");
#nullable restore
#line 202 "D:\code\code C#\Hoainam1\netCore\CongThongTin\CongThongTin\Areas\Admin\Views\MgModul\Index.cshtml"
                          Write(Html.Raw(Json.Serialize(Model.Value)));

#line default
#line hidden
#nullable disable
                WriteLiteral(@";

                //Paging
                $scope.data = $scope.model.jControll;
                $scope.totalItems = function () { return $scope.data.length; };
                $scope.currentPage = 1;
                $scope.itemsOnPage = 30;
                $scope.maxSize = 5;
                $scope.dataPagingRole = function () {
                    return $scope.loadDataPaging($scope.data, $scope.currentPage, $scope.itemsOnPage);
                }
                //End paging

                //thay đổi status modul
                $scope.updateStatusModul = function (maControll) {
                    $scope.model.jControll.find(md => md.id === maControll).isActive = !$scope.model.jControll.find(md => md.id === maControll).isActive;
                     var statusCode = {
                        200: function (res) {
                        }
                     }
                     AjaxPostData(""/admin/MgModul/UpdateStatusModul"", { maControll: maControll }, statusCode);
            ");
                WriteLiteral(@"    }
                //Chỉnh sửa modul
                $scope.loadFormEditModul = function (controll) {
                    $scope.modulEdit = {};
                    $scope.modulEdit = controll;
                    $(""#modal-edit-modul"").modal(""show"");
                };
                $scope.saveEditModul = function () {
                    var modulNew = $scope.modulEdit;
                    var modulOld = $scope.model.jControll.find(md => md.id === $scope.modulEdit.id);
                    var statusCode = {
                        200: function (res) {
                           if (res.success) {
                                swal(res.message, """", ""success"");
                                angular.extend(modulOld, modulNew);
                                $(""#modal-edit-modul"").modal(""hide"");
                            }
                            else {
                                swal(res.message, """", ""error"");
                            }
                        }
  ");
                WriteLiteral(@"                  }
                    AjaxPostData(""/admin/MgModul/EditModul"", { mControll: modulNew }, statusCode);
                }
                //end chỉnh sửa modul

                //Xem chitiet modul
                $scope.loadActionOfModul = function (controll) {
                    $scope.modulView = {};
                    $scope.modulView = controll;
                    $(""#modal-view-action-modul"").modal(""show"");
                }
                //end xem chi tiết modul

                //thay đổi status action
                $scope.updateStatusAction = function (maAction) {
                    $scope.model.jControll.find(ctr => ctr.id === $scope.modulView.id).jaction.find(ac => ac.id === maAction).isActive
                    = !$scope.model.jControll.find(ctr => ctr.id === $scope.modulView.id).jaction.find(ac => ac.id === maAction).isActive;
                     var statusCode = {
                        200: function (res) {
                        }
                 ");
                WriteLiteral(@"    }
                     AjaxPostData(""/admin/MgModul/UpdateStatusAction"", { maAction: maAction }, statusCode);
                }
                //Chỉnh sửa action
                $scope.loadFormEditAction = function (action) {
                    $scope.actionEdit = {};
                    $scope.actionEdit = action;
                    $(""#modal-edit-action"").modal(""show"");
                };
                $scope.saveEditAction = function () {
                    var actionNew = $scope.actionEdit;
                    var actionOld = $scope.model.jControll.find(ctr => ctr.id === $scope.modulView.id).jaction.find(ac => ac.id === $scope.actionEdit.id);
                    var statusCode = {
                        200: function (res) {
                           if (res.success) {
                                swal(res.message, """", ""success"");
                                angular.extend(actionOld, actionNew);
                                $(""#modal-edit-action"").modal(""hide"");
   ");
                WriteLiteral(@"                        }
                            else {
                                swal(res.message, """", ""error"");
                           }
                        }
                    }
                    AjaxPostData(""/admin/MgModul/EditAction"", { mAction: actionNew }, statusCode);
                }
                //end chỉnh sửa modul


            scope = $scope;
            }]);
    </script>
");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
